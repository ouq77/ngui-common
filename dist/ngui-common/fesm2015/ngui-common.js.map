{"version":3,"file":"ngui-common.js.map","sources":["ng://@ngui/common/lib/ngui-inview/src/ngui-inview.component.ts","ng://@ngui/common/lib/ngui-inview/src/ngui-inview.directive.ts","ng://@ngui/common/lib/ngui-inview/ngui-inview.module.ts","ng://@ngui/common/lib/ngui-utils/src/fire-event.ts","ng://@ngui/common/lib/ngui-utils/src/dynamic-component.service.ts","ng://@ngui/common/lib/ngui-list/src/ngui-inview-page.component.ts","ng://@ngui/common/lib/ngui-list/src/ngui-virtual-list.component.ts","ng://@ngui/common/lib/ngui-list/src/no-match-found.ts","ng://@ngui/common/lib/ngui-list/src/none-select.ts","ng://@ngui/common/lib/ngui-list/src/ngui-autocomplete.component.ts","ng://@ngui/common/lib/ngui-list/src/ngui-list.directive.ts","ng://@ngui/common/lib/ngui-list/src/ngui-list-item.directive.ts","ng://@ngui/common/lib/ngui-list/ngui-list.module.ts","ng://@ngui/common/lib/ngui-utils/src/ngui-highlight.pipe.ts","ng://@ngui/common/lib/ngui-utils/src/konsole.ts","ng://@ngui/common/lib/ngui-utils/ngui-utils.module.ts","ng://@ngui/common/lib/ngui-common.module.ts"],"sourcesContent":["import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * An element that listens to viewport positioning and fires inView and notInview events\n * ### example\n * ```ts\n * <ngui-inview [observerOptions]=\"myObserverOptions\" (inview)=\"doA()\" (notInview)=\"doB()\">\n *   <img *ngIf src=\"https://picsum.photos/800/300?image=1>\n * </ngui-inview>\n * ```\n */\n@Component({\n  selector: 'ngui-inview',\n  template: `\n        <ng-container *ngIf=\"isInview\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n    `,\n  styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /** <ng-template> reference */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\n   * Only applies when there are no \"inview\" event handlers defined.\n   **/\n  @Input() blurEnabled = true;\n\n  @Output() inview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n  @Output() notInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n\n  observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n  isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n  once80PctVisible = false;\n\n  constructor(\n        private element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** stop IntersectionObserver */\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n  }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.isInview = true;\n        this.defaultInviewHandler(entry);\n        this.inview.emit(entry);\n      } else {\n        this.notInview.emit(entry);\n      }\n    });\n  }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n  defaultInviewHandler(entry): any {\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\n      return;\n    }\n\n    if (entry.intersectionRatio < 0.8) {\n      const opacity = entry.intersectionRatio * (1 / 0.8);\n      const blur = 20 - Math.floor(entry.intersectionRatio * 10) * 4;\n      const filter = `blur(${blur}px)`;\n      Object.assign(entry.target.style, {opacity, filter});\n    } else {\n      entry.target.style.opacity = 1;\n      entry.target.style.filter = 'unset';\n\n      this.once80PctVisible = true;\n    }\n  }\n}\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n  observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n\n    /** Event that will be fired when in viewport */\n  @Output() nguiInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n  @Output() nguiOutview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n\n  constructor(\n        public element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** Stops IntersectionObserver */\n  ngOnDestroy(): void {\n    if (isPlatformBrowser(this.platformId) && this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.nguiInview.emit(entry);\n      } else {\n        this.nguiOutview.emit(entry);\n      }\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\nexport {NguiInviewComponent, NguiInviewDirective};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ],\n  exports: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ]\n})\nexport class NguiInviewModule {\n}\n","/**\n * fire the given event with options on the element\n * @example\n * fireEvent(el, 'click');\n * fireEvent(el, 'keypress', {key: 'Enter'});\n */\nexport function fireEvent(el: HTMLElement, type: string, options: any = {}): boolean {\n  let event;\n  if (type === 'click' || type.match(/^mouse/)) {\n    event = new MouseEvent(type, options);\n  } else if (type.match(/^key/)) {\n    event = new KeyboardEvent(type, options);\n  } else if (type.match(/^touch/)) {\n    event = new TouchEvent(type, options);\n  }\n\n  return el.dispatchEvent(event);\n}\n","/**\n * Insert a component dynamically using a service\n *\n * ### Example\n * ```ts\n * import { DynamicComponentService } from './dynamic.component.service';\n * import { MyDynamicComponent } from './my-1.component';\n *\n * @Component({\n *   template: ` ... <div #dymamic></div>`\n * })\n * export class MyComponent {\n *   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\n *\n *   constructor(public dcs: DynamicComponentService) {}\n *\n *   insertComp() {\n *     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\n *     ths.dcs.insertComonent(cmpRef);\n *     compRef.instance.items = [1,2,3];              // dealing with @input\n *     compRef.instance.output$.subscribe(val => {}); // dealing with @output\n *   }\n * }\n * ```\n */\nimport {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Provide service to add or remove component dynamically\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef<any> {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef<any>): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n *\n * ### example\n * ```ts\n * <ngui-inview-page [items]=\"items\">\n *   <ng-template let-items=\"items\">\n *     <div *ngIf=\"items else noItems\">\n *       <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\n *     </div>\n *   </ng-template>\n * </ngui-inview-page>\n * ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    <div class=\"inview-page contents\"\n      (nguiInview)=\"restoreItems()\"\n      (nguiOutview)=\"emptyItems()\">\n      <!-- add blank ngui-list-item by condition  -->\n      <!-- no match found ngui-list-item by condition -->\n      <ng-container\n        [ngTemplateOutlet]=\"template||defaultTemplate\"\n        [ngTemplateOutletContext]=\"{items: items, outView: outView}\">\n      </ng-container>\n      <div *ngIf=\"outView\">{{ itemsBackup.length }} items hidden</div>\n    </div>\n\n    <ng-template #defaultTemplate>\n      <div *ngIf=\"!items\"> Error: requires [items] </div>\n      <div *ngIf=\"!template\"> Error: requires &lt;ng-template></div>\n    </ng-template>\n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n  // @Input('template') template: TemplateRef<any>;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array<any>;\n\n  /** IntersectionObserver options */\n  options: any;\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array<any> = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array<any>): void {\n    if (!this.destroyed) {\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `<ngui-inview ..>` inserts <ngui-inview-page> into\n * `<div #pages>` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `<ngui-inview-page>` again.\n *\n * <ngui-inview-page> listens to (nguiInview) and (nguiOutview) events,\n * when <ngui-inview-page> is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n *\n * ### example\n * ```ts\n * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\n *   <ng-template let-items=\"items\">\n *     <div *ngIf=\"!items\">Loading</div>\n *     <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\n *   </ng-template>\n * </ngui-virtual-list>\n * ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    <div class=\"ngui-virtual-list\"\n      (focus)=\"_focused = true\"\n      (click)=\"_focused = true\">\n      <!-- hold multiple <ngui-inview-page> -->\n      <div #pages></div>\n      <!-- insert <ngui-inview-page> into #pages -->\n      <ngui-inview (inview)=\"addAnInviewPageToPages()\"></ngui-inview>\n    </div>\n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n  /** Fired when child `<ngui-list-item>` is selected */\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array<any>)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n   *\n   * ### example\n   * ```ts\n   * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\n   *   <ng-template let-items=\"items\">\n   *     <div *ngIf=\"items else noItems\">\n   *        <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\n   *     </div>\n   *     <ng-template #noItems>Loading</ng-template>\n   *   </ng-template>\n   * </ngui-virtual-list>\n   * ```\n   */\n  @Output() bottomInview: EventEmitter<any> = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef<NguiInviewPageComponent>;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array<ComponentRef<NguiInviewPageComponent>> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error('<ngui-virtual-list> requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    } else {\n      console.log('Already a page being inserted, skipping adding a page');\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array<any>): void {\n    this.isListLoading = false;\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n","export class NoMatchFound {\n  html = 'No Match Found';\n}\n","export class NoneSelect {\n  html = 'Select';\n}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef\n} from '@angular/core';\n\nimport { fireEvent } from '../../ngui-utils/src/fire-event';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NoMatchFound } from './no-match-found';\nimport { NoneSelect } from './none-select';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'ngui-autocomplete',\n  template: `\n    <div *ngIf=\"isReady\" class=\"ngui-autocomplete\">\n      <div #pages></div>\n      <ngui-inview (inview)=\"addMorePages()\"></ngui-inview>\n    </div>\n  `,\n  styles: [`\n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\n  `]\n})\nexport class NguiAutocompleteComponent extends NguiVirtualListComponent implements OnInit {\n  @Input() for: string; // input tag id\n  @Input() minInputChars = 1;\n  @Input() blankOption = 'Select One';\n  @Input() noMatchItem = 'No Match Found';\n\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n\n  inputEl: HTMLInputElement;\n  _focused: any = {input: false, listItem: false};\n  _focusTimer;\n  _acTimer;\n  _selectedFromList: boolean;\n  _escapedFromList: boolean;\n  _orgInputValue: string;\n  _prevInputValue: string;\n  _lastSelected: any;\n\n  /**\n   * returns autocomplete display condition\n   * autocompolete list is only visible\n   *   - when input element is focused or list element is focused\n   *   - when input value has enought characters\n   *   - and user just did not selected or escaped\n   */\n  get isReady(): boolean {\n    const selectedOrEscaped = this._selectedFromList || this._escapedFromList;\n    const focused = this._focused.input || this._focused.listItem;\n    const minChars = this.inputEl.value.length >= this.minInputChars;\n\n    return (!selectedOrEscaped && focused && minChars);\n  }\n\n  ngOnInit(): void {\n    this.inputEl = <HTMLInputElement> document.querySelector('#' + this.for); // tslint:disable-line\n    this.positionThisUnderInputEl();\n\n    fromEvent(this.inputEl, 'keyup').subscribe(this.onInputElKeyup.bind(this));\n    this.inputEl.addEventListener('focus', this.onInputElFocused.bind(this));\n    this.inputEl.addEventListener('blur', this.onInputElBlurred.bind(this));\n    this.selected.subscribe(this.onSelected.bind(this));\n    this.escaped.subscribe(this.onEscaped.bind(this));\n  }\n\n  onSelected(value): void {\n    this._selectedFromList = true;\n    this.inputEl.focus();\n    this._lastSelected = value;\n    this.cdr.detectChanges();    // for ChangeDetectionStrategy.OnPush\n    console.log('NguiAutoCompleteComponent.onSelected() is called', value);\n  }\n\n  onEscaped(): void {\n    this._escapedFromList = true;\n    this.inputEl.focus();\n    if (!this._lastSelected) {\n      this.inputEl.value = this._orgInputValue;\n    }\n    this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\n    console.log('NguiAutoCompleteComponent.onEscaped() is called');\n  }\n\n  onInputElFocused(event): void {\n    console.log('NguiAutoCompleteComponent.onInputElFocused() is called', event);\n    this.isListLoading = false;\n    if (typeof this._orgInputValue === 'undefined') {\n      this._orgInputValue = this.inputEl.value;\n    }\n    this._prevInputValue = this.inputEl.value;\n    this.setFocused('input', true);\n  }\n\n  onInputElBlurred(): void {\n    this.setFocused('input', false);\n  }\n\n  clearList(): void {\n    this.inviewPages.forEach(compRef => {\n      compRef.destroy();\n    });\n    this.inviewPages = [];\n  }\n\n  onInputElKeyup(event: KeyboardEvent): void {\n    console.log('NguiAutoCompleteComponent.onInputKeyup() is called', event.key);\n    const firstList = this.element.nativeElement.querySelector('ngui-list-item');\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      if (firstList) {\n        fireEvent(firstList, 'keyup', {key: event.key});\n      } else {\n        this.onEscaped();\n      }\n    } else if ((event.key === 'ArrowDown' || event.key === 'ArrowRight') && firstList) {\n      firstList.focus();\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\n      //\n    } else if (this.inputEl.value.length >= this.minInputChars) {\n      this._selectedFromList = false;\n      this._escapedFromList = false;\n      this.addAutocompleteList();\n    }\n  }\n\n  /** Complete the first page of autocomplete */\n  addAutocompleteList(): void {\n    if (this.isReady) {\n      clearTimeout(this._acTimer);\n      this._acTimer = setTimeout(() => {\n        this.isListLoading = false; // ???????/\n        this._prevInputValue = this.inputEl.value;\n        this._escapedFromList = false;\n        this._selectedFromList = false;\n        this.clearList();\n        this.addAnInviewPageToPages();\n      }, 200);\n    }\n  }\n\n  /** Complete after the first page of autocomplete when it scrolls to the bottom */\n  addMorePages(): void {\n    if (this.inviewPages.length) {\n      this.addAnInviewPageToPages();\n    }\n  }\n\n  setFocused(elType: 'input' | 'listItem', val: boolean): void {\n    if (val) {\n      clearTimeout(this._focusTimer);\n      this._focused = {input: false, listItem: false};\n      this._focused[elType] = true;\n    } else {\n      this._focusTimer = setTimeout(() => {\n        this._focused[elType] = false;\n        this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\n      }, 100);\n    }\n  }\n\n  positionThisUnderInputEl(): void {\n    const thisEl = this.element.nativeElement;\n    const thisInputElBCR = this.inputEl.getBoundingClientRect();\n    const top = thisInputElBCR.top + thisInputElBCR.height + window.scrollY;\n\n    this.renderer.setStyle(thisEl, 'left', `${thisInputElBCR.left}px`);\n    this.renderer.setStyle(thisEl, 'top', `${top}px`);\n    this.renderer.setStyle(thisEl, 'minWidth', `${thisInputElBCR.width}px`);\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array<any>): void {\n    console.log('>>>>>> NguiAutocompleteComponent.addList() is called()');\n    this.isListLoading = false;\n\n    // TODO: ........ for 1st page only, show no match found or blank option\n    let noMatchItem: any;\n    let blankItem: any = {};\n    if (this.inviewPages.length === 1) {\n      if (this.noMatchItem && (!items || items.length === 0)) { // add no match item\n        noMatchItem = new NoMatchFound();\n        blankItem.html = this.noMatchItem;\n      } else if (this.blankOption) {\n        blankItem = new NoneSelect();\n        blankItem.html = this.blankOption;\n      }\n    }\n\n    const allItems = [].concat(noMatchItem, blankItem, items).filter(x => x);\n    this.inviewPage.instance.setItems(allItems);\n    this.cdr.detectChanges();\n  }\n\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // tslint:disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `<ngui-list-item>` is selected */\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n","import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // tslint:disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // tslint:disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array<HTMLElement>\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n    case 37: case 38: // up arrow, left arrow\n      prevListItem.focus();\n      break;\n    case 39: case 40: // down arrow, right arrow\n      nextListItem.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n    case 'Enter':\n      this.parentListComp.selected.emit(this.object);\n      break;\n    case 'Escape':\n      this.parentListComp.escaped.emit();\n      break;\n    default:\n      break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `<span class=\"ngui-highlight\">${match}</span>`);\n    }\n\n    return ret;\n  }\n}\n","/**\n * window.konsole alternative\n * ### example\n * ```\n * konsole.setLogLevel('error');\n * konwole.log(1,2,3,4,5);\n * ```\n */\nexport abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array<any>): void {\n    if (this.toLog('DEBUG')) {\n        // noinspection TsLint\n        console.debug.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array<any>): void {\n    if (this.toLog('LOG')) {\n      console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array<any>): void {\n    if (this.toLog('INFO')) {\n        // noinspection TsLint\n        console.info.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array<any>): void {\n    if (this.toLog('WARN')) {\n      console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array<any>): void {\n    if (this.toLog('ERROR')) {\n      console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\nimport { konsole } from './src/konsole';\nimport { fireEvent } from './src/fire-event';\n\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n","import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n  imports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ],\n  exports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ]\n})\nexport class NguiCommonModule {\n}\n"],"names":[],"mappings":"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"}
