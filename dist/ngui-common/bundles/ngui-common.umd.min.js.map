{"version":3,"sources":["ng://@ngui/common/lib/ngui-inview/src/ngui-inview.component.ts","ng://@ngui/common/lib/ngui-inview/src/ngui-inview.directive.ts","ng://@ngui/common/lib/ngui-inview/ngui-inview.module.ts","node_modules/tslib/tslib.es6.js","ng://@ngui/common/lib/ngui-utils/src/fire-event.ts","ng://@ngui/common/lib/ngui-utils/src/dynamic-component.service.ts","ng://@ngui/common/lib/ngui-list/src/ngui-inview-page.component.ts","ng://@ngui/common/lib/ngui-list/src/ngui-virtual-list.component.ts","ng://@ngui/common/lib/ngui-list/src/no-match-found.ts","ng://@ngui/common/lib/ngui-list/src/none-select.ts","ng://@ngui/common/lib/ngui-list/src/ngui-autocomplete.component.ts","ng://@ngui/common/lib/ngui-list/src/ngui-list.directive.ts","ng://@ngui/common/lib/ngui-list/src/ngui-list-item.directive.ts","ng://@ngui/common/lib/ngui-list/ngui-list.module.ts","ng://@ngui/common/lib/ngui-utils/src/ngui-highlight.pipe.ts","ng://@ngui/common/lib/ngui-utils/src/konsole.ts","ng://@ngui/common/lib/ngui-utils/ngui-utils.module.ts","ng://@ngui/common/lib/ngui-common.module.ts"],"names":["NguiInviewComponent","prototype","ngOnInit","this","options","observerOptions","isPlatformBrowser","platformId","observer","IntersectionObserver","handleIntersect","bind","observe","element","nativeElement","ngOnDestroy","disconnect","entries","_this","forEach","entry","isInview","defaultInviewHandler","inview","emit","notInview","blurEnabled","once80PctVisible","observers","length","intersectionRatio","opacity","filter","Math","floor","Object","assign","target","style","Component","args","selector","template","ElementRef","Inject","PLATFORM_ID","ContentChild","TemplateRef","Input","Output","threshold","EventEmitter","NguiInviewDirective","nguiInview","nguiOutview","Directive","NguiInviewModule","NgModule","imports","CommonModule","declarations","exports","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","fireEvent","el","type","event","match","MouseEvent","KeyboardEvent","TouchEvent","dispatchEvent","DynamicComponentService","createComponent","component","into","rootViewContainer","factoryResolver","resolveComponentFactory","create","parentInjector","insertComponent","componentRef","compId","random","pow","location","setAttribute","instance","id","insert","hostView","Injectable","ComponentFactoryResolver","NguiInviewPageComponent","restoreItems","outView","items","from","itemsBackup","undefined","renderer","setStyle","contentsEl","cdRef","detectChanges","querySelector","console","log","destroyed","emptyItems","height","getBoundingClientRect","setItems","Renderer2","ChangeDetectorRef","NguiVirtualListComponent","ngAfterViewInit","bottomInview","error","addAnInviewPageToPages","isListLoading","inviewPage","dynamicComponentService","pagesRef","inviewPages","push","addList","ViewChild","read","ViewContainerRef","cdr","selected","escaped","_focused","NoMatchFound","html","NoneSelect","__extends","__","constructor","tslib_1.__extends","defineProperty","NguiAutocompleteComponent","selectedOrEscaped","_selectedFromList","_escapedFromList","focused","input","listItem","minChars","inputEl","value","minInputChars","document","for","positionThisUnderInputEl","fromEvent","subscribe","onInputElKeyup","addEventListener","onInputElFocused","onInputElBlurred","onSelected","onEscaped","focus","_lastSelected","_orgInputValue","_prevInputValue","setFocused","clearList","compRef","destroy","key","firstList","addAutocompleteList","isReady","clearTimeout","_acTimer","setTimeout","addMorePages","elType","val","_focusTimer","thisEl","thisInputElBCR","top","window","scrollY","left","width","noMatchItem","blankItem","blankOption","allItems","concat","x","_super","apply","arguments","NguiListDirective","NguiListItemDirective","parentListComp","listDirective","virtualListComponent","autocompleteComponent","Error","object","viewContainer","clear","innerHTML","keydown","thisListItem","keyCode","which","parentListEl","listItems","querySelectorAll","listItemNdx","indexOf","nextListItem","prevListItem","keyup","mousedown","blurred","decorators","Optional","Host","HostListener","NguiListModule","entryComponents","NguiHighlightPipe","transform","text","search","ret","re","RegExp","replace","Pipe","name","konsole","toLog","param","LOG_LEVELS","logLevel","setLogLevel","toUpperCase","logLevels","keys","sessionStorage","setItem","debug","_i","info","warn","ALL","parseInt","DEBUG","LOG","INFO","WARN","ERROR","NONE","NguiUtilsModule","providers","NguiCommonModule"],"mappings":"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","sourcesContent":["import {\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    TemplateRef\n} from '@angular/core';\n\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * An element that listens to viewport positioning and fires inView and notInview events\n * ### example\n * ```ts\n * <ngui-inview [observerOptions]=\"myObserverOptions\" (inview)=\"doA()\" (notInview)=\"doB()\">\n *   <img *ngIf src=\"https://picsum.photos/800/300?image=1>\n * </ngui-inview>\n * ```\n */\n@Component({\n  selector: 'ngui-inview',\n  template: `\n        <ng-container *ngIf=\"isInview\" [ngTemplateOutlet]=\"template\">\n        </ng-container>\n    `,\n  styles: [':host {display: block;}']\n})\nexport class NguiInviewComponent implements OnInit, OnDestroy {\n    /** <ng-template> reference */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n  /** Controls whether blur effect is applied to a component with less than 80% intersection ratio.\n   * Only applies when there are no \"inview\" event handlers defined.\n   **/\n  @Input() blurEnabled = true;\n\n  @Output() inview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n  @Output() notInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n\n  observer: IntersectionObserver;\n    /** indicates that this element is in viewport */\n  isInview = false;\n    /** indicates that this element is 80% in viewport. Used by the default callback */\n  once80PctVisible = false;\n\n  constructor(\n        private element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** stop IntersectionObserver */\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n  }\n\n    /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.isInview = true;\n        this.defaultInviewHandler(entry);\n        this.inview.emit(entry);\n      } else {\n        this.notInview.emit(entry);\n      }\n    });\n  }\n\n    /**\n     * default intersection handler, which sets blur dependes on intersection ratio\n     * this won't be invoked if user provides any (inview) event. e.g. (inview)=\"something()\"\n     */\n  defaultInviewHandler(entry): any {\n    if (!this.blurEnabled || this.once80PctVisible || this.inview.observers.length) {\n      return;\n    }\n\n    if (entry.intersectionRatio < 0.8) {\n      const opacity = entry.intersectionRatio * (1 / 0.8);\n      const blur = 20 - Math.floor(entry.intersectionRatio * 10) * 4;\n      const filter = `blur(${blur}px)`;\n      Object.assign(entry.target.style, {opacity, filter});\n    } else {\n      entry.target.style.opacity = 1;\n      entry.target.style.filter = 'unset';\n\n      this.once80PctVisible = true;\n    }\n  }\n}\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Fires (nguiInview) or (nguiOutview) events dependents on the element is in viewport or not\n */\n@Directive({\n    selector: '[nguiInview], [nguiOutview]' // tslint:disable-line\n})\nexport class NguiInviewDirective implements OnInit, OnDestroy {\n  observer: IntersectionObserver;\n\n    /** IntersectionObserver options */\n  @Input() observerOptions: IntersectionObserverInit = {threshold: [.1, .2, .3, .4, .5, .6, .7, .8]};\n    /** Deprecated config. Use `observerOptions` instead.\n     * @deprecated Use `observerOptions` instead. */\n  @Input() options: any;\n\n    /** Event that will be fired when in viewport */\n  @Output() nguiInview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n    /** Event that will be fired when out of  viewport */\n  @Output() nguiOutview: EventEmitter<IntersectionObserverEntry> = new EventEmitter();\n\n  constructor(\n        public element: ElementRef,\n        @Inject(PLATFORM_ID) private platformId: any) {\n  }\n\n    /** Starts IntersectionObserver */\n  ngOnInit(): void {\n    if (this.options) {\n      this.observerOptions = this.options;\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.observer = new IntersectionObserver(this.handleIntersect.bind(this), this.observerOptions);\n      this.observer.observe(this.element.nativeElement);\n    }\n  }\n\n    /** Stops IntersectionObserver */\n  ngOnDestroy(): void {\n    if (isPlatformBrowser(this.platformId) && this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n    /**\n     * Fires (nguiInview) event when this element is in viewport\n     *  and fires (nguiOutview) event when this element is not in viewport\n     */\n  handleIntersect(entries): void {\n    entries.forEach((entry: IntersectionObserverEntry) => {\n      if (entry['isIntersecting']) {\n        this.nguiInview.emit(entry);\n      } else {\n        this.nguiOutview.emit(entry);\n      }\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiInviewComponent} from './src/ngui-inview.component';\nimport {NguiInviewDirective} from './src/ngui-inview.directive';\n\nexport {NguiInviewComponent, NguiInviewDirective};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ],\n  exports: [\n    NguiInviewComponent,\n    NguiInviewDirective\n  ]\n})\nexport class NguiInviewModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * fire the given event with options on the element\n * @example\n * fireEvent(el, 'click');\n * fireEvent(el, 'keypress', {key: 'Enter'});\n */\nexport function fireEvent(el: HTMLElement, type: string, options: any = {}): boolean {\n  let event;\n  if (type === 'click' || type.match(/^mouse/)) {\n    event = new MouseEvent(type, options);\n  } else if (type.match(/^key/)) {\n    event = new KeyboardEvent(type, options);\n  } else if (type.match(/^touch/)) {\n    event = new TouchEvent(type, options);\n  }\n\n  return el.dispatchEvent(event);\n}\n","/**\n * Insert a component dynamically using a service\n *\n * ### Example\n * ```ts\n * import { DynamicComponentService } from './dynamic.component.service';\n * import { MyDynamicComponent } from './my-1.component';\n *\n * @Component({\n *   template: ` ... <div #dymamic></div>`\n * })\n * export class MyComponent {\n *   @ViewChild('dynamic', {read:ViewContainerRef}) vcr: ViewContainerRef;\n *\n *   constructor(public dcs: DynamicComponentService) {}\n *\n *   insertComp() {\n *     let compRef = this.dcs.createComponent(MyDynamicComponent, this.vcr);\n *     ths.dcs.insertComonent(cmpRef);\n *     compRef.instance.items = [1,2,3];              // dealing with @input\n *     compRef.instance.output$.subscribe(val => {}); // dealing with @output\n *   }\n * }\n * ```\n */\nimport {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  ViewContainerRef\n} from '@angular/core';\n\n/**\n * Provide service to add or remove component dynamically\n */\n@Injectable()\nexport class DynamicComponentService {\n  /** used to create a factory from a component class */\n  factoryResolver: ComponentFactoryResolver;\n  /** defines where a dynamic components insert into */\n  rootViewContainer: ViewContainerRef;\n\n  constructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n    this.factoryResolver = factoryResolver;\n  }\n\n  /**\n   * returns component reference\n   * The reason to seperate `createCompnent` and `insertComponent` is\n   * to allow some actions before we insert into a hostView.\n   * e.g styling, setting attributes, etc\n   */\n  createComponent(component: any, into?: ViewContainerRef): ComponentRef<any> {\n    this.rootViewContainer = into || this.rootViewContainer;\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n\n    return factory.create(this.rootViewContainer.parentInjector);\n  }\n\n  /**\n   * insert component\n   */\n  insertComponent(componentRef: ComponentRef<any>): Component {\n    const compId = `ngui-dyn-${Math.floor(Math.random() * 10 ** 7) + 10 ** 6}`;\n    componentRef.location.nativeElement.setAttribute('id', compId);\n    componentRef.instance.id = compId;\n\n    this.rootViewContainer.insert(componentRef.hostView);\n\n    return componentRef.instance;\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\n\n/**\n * A block of component that listens to inView and outView events,\n * so that it empties contents when out of view after backup items\n * and restores the contents when in view\n *\n * ### example\n * ```ts\n * <ngui-inview-page [items]=\"items\">\n *   <ng-template let-items=\"items\">\n *     <div *ngIf=\"items else noItems\">\n *       <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\n *     </div>\n *   </ng-template>\n * </ngui-inview-page>\n * ```\n */\n@Component({\n  selector: 'ngui-inview-page',\n  template: `\n    <div class=\"inview-page contents\"\n      (nguiInview)=\"restoreItems()\"\n      (nguiOutview)=\"emptyItems()\">\n      <!-- add blank ngui-list-item by condition  -->\n      <!-- no match found ngui-list-item by condition -->\n      <ng-container\n        [ngTemplateOutlet]=\"template||defaultTemplate\"\n        [ngTemplateOutletContext]=\"{items: items, outView: outView}\">\n      </ng-container>\n      <div *ngIf=\"outView\">{{ itemsBackup.length }} items hidden</div>\n    </div>\n\n    <ng-template #defaultTemplate>\n      <div *ngIf=\"!items\"> Error: requires [items] </div>\n      <div *ngIf=\"!template\"> Error: requires &lt;ng-template></div>\n    </ng-template>\n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiInviewPageComponent implements OnInit, OnDestroy {\n\n  /** Allow users to change the contents */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n  // @Input('template') template: TemplateRef<any>;\n\n  /** List of elements that are used to render this element */\n  @Input() items: Array<any>;\n\n  /** IntersectionObserver options */\n  options: any;\n  /** Indicates that the page of out of viewport */\n  outView = false;\n  /** The copy of items. This is set when this element is out of viewport */\n  itemsBackup: Array<any> = [];\n  /**\n   * The first element of this component.\n   * The height of it remains the same even when items get empty out.\n   */\n  contentsEl: HTMLElement;\n  destroyed: boolean;\n\n  constructor(\n    private element: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Restore items when in viewport, so that elements are rendered\n   */\n  restoreItems(): void {\n    if (this.outView) {\n      this.outView = false;\n      this.items = Array.from(this.itemsBackup || []);\n      this.itemsBackup = undefined;\n      this.renderer.setStyle(this.contentsEl, 'height', undefined);\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.contentsEl =\n      this.element.nativeElement.querySelector('.inview-page.contents');\n  }\n\n  ngOnDestroy(): void {\n    console.log('NguiInviewPageComponent.ngOnDestroy() is called');\n    this.destroyed = true;\n  }\n\n  /**\n   * Empty items when not in viewport, so that elements are not rendered\n   */\n  emptyItems(): void {\n    if (this.items && this.contentsEl && !this.outView) {\n      // set height before emptying contents\n      const height = this.element.nativeElement.getBoundingClientRect().height;\n      this.renderer.setStyle(this.contentsEl, 'height', `${height}px`);\n\n      this.outView = true;\n      this.itemsBackup = Array.from(this.items || []);\n      this.items = undefined;\n      if (!this.destroyed) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  setItems(items: Array<any>): void {\n    if (!this.destroyed) {\n      console.log('NguiInviewPageComponent.setItems() is called with', items);\n      this.items = items;\n      this.cdRef.detectChanges();\n    }\n  }\n\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { DynamicComponentService } from '../../ngui-utils/src/dynamic-component.service';\nimport { NguiInviewPageComponent } from './ngui-inview-page.component';\n\n/**\n * Virtual List\n *\n * The `<ngui-inview ..>` inserts <ngui-inview-page> into\n * `<div #pages>` when it is in viewport\n * When it's inserted, it will be pushed down, which makes it out of viewport.\n * User scrolls down to see the bottom of the list,\n * then it will insert another `<ngui-inview-page>` again.\n *\n * <ngui-inview-page> listens to (nguiInview) and (nguiOutview) events,\n * when <ngui-inview-page> is out of view port, it empties out the contents.\n * and it restores back the contents when it is in viewport again.\n *\n * ### example\n * ```ts\n * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\n *   <ng-template let-items=\"items\">\n *     <div *ngIf=\"!items\">Loading</div>\n *     <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\n *   </ng-template>\n * </ngui-virtual-list>\n * ```\n */\n@Component({\n  selector: 'ngui-virtual-list',\n  template: `\n    <div class=\"ngui-virtual-list\"\n      (focus)=\"_focused = true\"\n      (click)=\"_focused = true\">\n      <!-- hold multiple <ngui-inview-page> -->\n      <div #pages></div>\n      <!-- insert <ngui-inview-page> into #pages -->\n      <ngui-inview (inview)=\"addAnInviewPageToPages()\"></ngui-inview>\n    </div>\n  `,\n  styles: [`\n    :host {display: block}\n  `]\n})\nexport class NguiVirtualListComponent implements AfterViewInit {\n\n  /** the container NguiInviewPage will be inserted */\n  @ViewChild('pages', {read: ViewContainerRef}) pagesRef: ViewContainerRef;\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n  /** Fired when child `<ngui-list-item>` is selected */\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Event fired when bottom of the virtual list is in view\n   * The handler of this event must call `$event.addItems(items: Array<any>)` to fill contents\n   * If not, only the first page is loaded, and rest of the pages won't be loaded;\n   *\n   * ### example\n   * ```ts\n   * <ngui-virtual-list (bottomInview)=\"loadItems($event)\">\n   *   <ng-template let-items=\"items\">\n   *     <div *ngIf=\"items else noItems\">\n   *        <li *ngFor=\"let num of items; trackBy: num\">row number: {{ num }}</li>\n   *     </div>\n   *     <ng-template #noItems>Loading</ng-template>\n   *   </ng-template>\n   * </ngui-virtual-list>\n   * ```\n   */\n  @Output() bottomInview: EventEmitter<any> = new EventEmitter();\n\n  /** The last NguiInviewPageComponent being inserted */\n  inviewPage: ComponentRef<NguiInviewPageComponent>;\n  _focused = false;\n  /** Indicates if a page is still loading */\n  isListLoading: boolean;\n  inviewPages: Array<ComponentRef<NguiInviewPageComponent>> = [];\n\n  constructor(\n    public renderer: Renderer2,\n    public element: ElementRef,\n    public dynamicComponentService: DynamicComponentService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  /** Check if necessary input and output is provided */\n  ngAfterViewInit(): void {\n    if (!this.template || !this.bottomInview.observers.length) {\n      console.error('<ngui-virtual-list> requires [template] and {bottomInview)');\n    }\n  }\n\n  /**\n   * When the bottom is inview port, this function is called\n   * It will insert a dynamicall created NguiInviewPageComponent with the given template.\n   * It will also fires (bottomInview) event, so that user can fill up items for the page.\n   */\n  addAnInviewPageToPages(): void {\n    if (!this.isListLoading) {\n      this.isListLoading = true;\n\n      this.inviewPage =\n        this.dynamicComponentService.createComponent(NguiInviewPageComponent, this.pagesRef);\n      this.dynamicComponentService.insertComponent(this.inviewPage);\n\n      this.inviewPage.instance.template = this.template;\n      this.inviewPages.push(this.inviewPage);\n\n      this.bottomInview.emit(this); // fire event, so that user can load items\n    } else {\n      console.log('Already a page being inserted, skipping adding a page');\n    }\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array<any>): void {\n    this.isListLoading = false;\n    console.log('>>>>>> NguiVirtualListComponent.addList() is called()');\n    this.inviewPage.instance.setItems(items);\n  }\n\n}\n","export class NoMatchFound {\n  html = 'No Match Found';\n}\n","export class NoneSelect {\n  html = 'Select';\n}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef\n} from '@angular/core';\n\nimport { fireEvent } from '../../ngui-utils/src/fire-event';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NoMatchFound } from './no-match-found';\nimport { NoneSelect } from './none-select';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'ngui-autocomplete',\n  template: `\n    <div *ngIf=\"isReady\" class=\"ngui-autocomplete\">\n      <div #pages></div>\n      <ngui-inview (inview)=\"addMorePages()\"></ngui-inview>\n    </div>\n  `,\n  styles: [`\n    :host {position: absolute; background-color: #fff; max-height: 300px; overflow: auto}\n    .ngui-autocomplete { border: 1px solid #ccc; padding: 4px }\n  `]\n})\nexport class NguiAutocompleteComponent extends NguiVirtualListComponent implements OnInit {\n  @Input() for: string; // input tag id\n  @Input() minInputChars = 1;\n  @Input() blankOption = 'Select One';\n  @Input() noMatchItem = 'No Match Found';\n\n  /** Template of NguiInviewPage. Allow users to define their own template  */\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\n\n  inputEl: HTMLInputElement;\n  _focused: any = {input: false, listItem: false};\n  _focusTimer;\n  _acTimer;\n  _selectedFromList: boolean;\n  _escapedFromList: boolean;\n  _orgInputValue: string;\n  _prevInputValue: string;\n  _lastSelected: any;\n\n  /**\n   * returns autocomplete display condition\n   * autocompolete list is only visible\n   *   - when input element is focused or list element is focused\n   *   - when input value has enought characters\n   *   - and user just did not selected or escaped\n   */\n  get isReady(): boolean {\n    const selectedOrEscaped = this._selectedFromList || this._escapedFromList;\n    const focused = this._focused.input || this._focused.listItem;\n    const minChars = this.inputEl.value.length >= this.minInputChars;\n\n    return (!selectedOrEscaped && focused && minChars);\n  }\n\n  ngOnInit(): void {\n    this.inputEl = <HTMLInputElement> document.querySelector('#' + this.for); // tslint:disable-line\n    this.positionThisUnderInputEl();\n\n    fromEvent(this.inputEl, 'keyup').subscribe(this.onInputElKeyup.bind(this));\n    this.inputEl.addEventListener('focus', this.onInputElFocused.bind(this));\n    this.inputEl.addEventListener('blur', this.onInputElBlurred.bind(this));\n    this.selected.subscribe(this.onSelected.bind(this));\n    this.escaped.subscribe(this.onEscaped.bind(this));\n  }\n\n  onSelected(value): void {\n    this._selectedFromList = true;\n    this.inputEl.focus();\n    this._lastSelected = value;\n    this.cdr.detectChanges();    // for ChangeDetectionStrategy.OnPush\n    console.log('NguiAutoCompleteComponent.onSelected() is called', value);\n  }\n\n  onEscaped(): void {\n    this._escapedFromList = true;\n    this.inputEl.focus();\n    if (!this._lastSelected) {\n      this.inputEl.value = this._orgInputValue;\n    }\n    this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\n    console.log('NguiAutoCompleteComponent.onEscaped() is called');\n  }\n\n  onInputElFocused(event): void {\n    console.log('NguiAutoCompleteComponent.onInputElFocused() is called', event);\n    this.isListLoading = false;\n    if (typeof this._orgInputValue === 'undefined') {\n      this._orgInputValue = this.inputEl.value;\n    }\n    this._prevInputValue = this.inputEl.value;\n    this.setFocused('input', true);\n  }\n\n  onInputElBlurred(): void {\n    this.setFocused('input', false);\n  }\n\n  clearList(): void {\n    this.inviewPages.forEach(compRef => {\n      compRef.destroy();\n    });\n    this.inviewPages = [];\n  }\n\n  onInputElKeyup(event: KeyboardEvent): void {\n    console.log('NguiAutoCompleteComponent.onInputKeyup() is called', event.key);\n    const firstList = this.element.nativeElement.querySelector('ngui-list-item');\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      if (firstList) {\n        fireEvent(firstList, 'keyup', {key: event.key});\n      } else {\n        this.onEscaped();\n      }\n    } else if ((event.key === 'ArrowDown' || event.key === 'ArrowRight') && firstList) {\n      firstList.focus();\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\n      //\n    } else if (this.inputEl.value.length >= this.minInputChars) {\n      this._selectedFromList = false;\n      this._escapedFromList = false;\n      this.addAutocompleteList();\n    }\n  }\n\n  /** Complete the first page of autocomplete */\n  addAutocompleteList(): void {\n    if (this.isReady) {\n      clearTimeout(this._acTimer);\n      this._acTimer = setTimeout(() => {\n        this.isListLoading = false; // ???????/\n        this._prevInputValue = this.inputEl.value;\n        this._escapedFromList = false;\n        this._selectedFromList = false;\n        this.clearList();\n        this.addAnInviewPageToPages();\n      }, 200);\n    }\n  }\n\n  /** Complete after the first page of autocomplete when it scrolls to the bottom */\n  addMorePages(): void {\n    if (this.inviewPages.length) {\n      this.addAnInviewPageToPages();\n    }\n  }\n\n  setFocused(elType: 'input' | 'listItem', val: boolean): void {\n    if (val) {\n      clearTimeout(this._focusTimer);\n      this._focused = {input: false, listItem: false};\n      this._focused[elType] = true;\n    } else {\n      this._focusTimer = setTimeout(() => {\n        this._focused[elType] = false;\n        this.cdr.detectChanges(); // for ChangeDetectionStrategy.OnPush\n      }, 100);\n    }\n  }\n\n  positionThisUnderInputEl(): void {\n    const thisEl = this.element.nativeElement;\n    const thisInputElBCR = this.inputEl.getBoundingClientRect();\n    const top = thisInputElBCR.top + thisInputElBCR.height + window.scrollY;\n\n    this.renderer.setStyle(thisEl, 'left', `${thisInputElBCR.left}px`);\n    this.renderer.setStyle(thisEl, 'top', `${top}px`);\n    this.renderer.setStyle(thisEl, 'minWidth', `${thisInputElBCR.width}px`);\n  }\n\n  // set items of NguiInviewPageComponent\n  addList(items: Array<any>): void {\n    console.log('>>>>>> NguiAutocompleteComponent.addList() is called()');\n    this.isListLoading = false;\n\n    // TODO: ........ for 1st page only, show no match found or blank option\n    let noMatchItem: any;\n    let blankItem: any = {};\n    if (this.inviewPages.length === 1) {\n      if (this.noMatchItem && (!items || items.length === 0)) { // add no match item\n        noMatchItem = new NoMatchFound();\n        blankItem.html = this.noMatchItem;\n      } else if (this.blankOption) {\n        blankItem = new NoneSelect();\n        blankItem.html = this.blankOption;\n      }\n    }\n\n    const allItems = [].concat(noMatchItem, blankItem, items).filter(x => x);\n    this.inviewPage.instance.setItems(allItems);\n    this.cdr.detectChanges();\n  }\n\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: 'ngui-list' // tslint:disable-line\n})\nexport class NguiListDirective {\n  /** Fired when child `<ngui-list-item>` is selected */\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n  /** Fired when `ESC` key is pressed from `<ngui-list-item>` */\n  @Output() escaped: EventEmitter<any> = new EventEmitter();\n\n  constructor(public element: ElementRef) { }\n}\n","import {\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Input,\n  OnInit,\n  Optional,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { NguiListDirective } from './ngui-list.directive';\nimport { NguiVirtualListComponent } from './ngui-virtual-list.component';\nimport { NguiAutocompleteComponent } from './ngui-autocomplete.component';\nimport { NoneSelect } from './none-select';\nimport { NoMatchFound } from './no-match-found';\n\n// tabindex, keydown, keyup(ENTER, ESC), click\n@Directive({\n  selector: 'ngui-list-item' // tslint:disable-line\n})\nexport class NguiListItemDirective implements OnInit {\n  @Input('item') object: any; // tslint:disable-line\n\n  nextSibling: HTMLElement;\n  prevSibling: HTMLElement;\n  parentListComp: NguiListDirective | NguiVirtualListComponent | NguiAutocompleteComponent;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private viewContainer: ViewContainerRef,\n    @Optional() @Host() private listDirective: NguiListDirective,\n    @Optional() @Host() private virtualListComponent: NguiVirtualListComponent,\n    @Optional() @Host() private autocompleteComponent: NguiAutocompleteComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n    this.parentListComp = this.listDirective || this.virtualListComponent || this.autocompleteComponent;\n    if (!this.parentListComp) {\n      throw Error('ngui-list-item requires parent of ngui-list, ngui-virtual-list, or ngui-autocomplete.');\n    }\n    if ((this.object instanceof NoneSelect) || (this.object instanceof NoMatchFound)) {\n      this.viewContainer.clear();\n      this.el.nativeElement.innerHTML = this.object.html;\n    }\n  }\n\n  // handles keyboard up, down, left, right\n  @HostListener('keydown', ['$event']) keydown(event): void {\n    const thisListItem = this.el.nativeElement;\n    const keyCode = event.which || event.keyCode;\n    const parentListEl = this.parentListComp.element.nativeElement;\n    const listItems: Array<HTMLElement>\n      = Array.from(parentListEl.querySelectorAll('ngui-list-item'));\n    const listItemNdx = listItems.indexOf(thisListItem);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n    case 37: case 38: // up arrow, left arrow\n      prevListItem.focus();\n      break;\n    case 39: case 40: // down arrow, right arrow\n      nextListItem.focus();\n      break;\n    default:\n      break;\n    }\n  }\n\n  // handles keyboard enter(13), esc(27)\n  @HostListener('keyup', ['$event']) keyup(event): void {\n    switch (event.key) {\n    case 'Enter':\n      this.parentListComp.selected.emit(this.object);\n      break;\n    case 'Escape':\n      this.parentListComp.escaped.emit();\n      break;\n    default:\n      break;\n    }\n  }\n\n  @HostListener('click', ['$event']) mousedown(): void {\n    this.parentListComp.selected.emit(this.object);\n  }\n\n  @HostListener('focus', ['$event']) focused(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', true);\n    }\n  }\n\n  @HostListener('blur', ['$event']) blurred(): void {\n    if (this.parentListComp['setFocused']) {\n      this.parentListComp['setFocused']('listItem', false);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NguiAutocompleteComponent} from './src/ngui-autocomplete.component';\nimport {NguiListItemDirective} from './src/ngui-list-item.directive';\nimport {NguiListDirective} from './src/ngui-list.directive';\nimport {NguiInviewPageComponent} from './src/ngui-inview-page.component';\nimport {NguiVirtualListComponent} from './src/ngui-virtual-list.component';\nimport {NguiInviewModule} from '../ngui-inview/ngui-inview.module';\n\nexport {NguiAutocompleteComponent, NguiListItemDirective, NguiListDirective, NguiInviewPageComponent, NguiVirtualListComponent};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NguiInviewModule\n  ],\n  declarations: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  exports: [\n    NguiAutocompleteComponent,\n    NguiInviewPageComponent,\n    NguiListDirective,\n    NguiListItemDirective,\n    NguiVirtualListComponent\n  ],\n  entryComponents: [NguiInviewPageComponent]\n})\nexport class NguiListModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nguiHighlight' })\nexport class NguiHighlightPipe implements PipeTransform {\n  transform(text: string, search: string): string {\n    let ret = text;\n    if (search) {\n      const re  = new RegExp(search, 'ig');\n      ret = text.replace(re, match => `<span class=\"ngui-highlight\">${match}</span>`);\n    }\n\n    return ret;\n  }\n}\n","/**\n * window.konsole alternative\n * ### example\n * ```\n * konsole.setLogLevel('error');\n * konwole.log(1,2,3,4,5);\n * ```\n */\nexport abstract class konsole { // tslint:disable-line\n  /** all log levels */\n  static LOG_LEVELS = {\n    ALL:   parseInt('00000', 2),\n    DEBUG: parseInt('00001', 2),\n    LOG:   parseInt('00010', 2),\n    INFO:  parseInt('00100', 2),\n    WARN:  parseInt('01000', 2),\n    ERROR: parseInt('10000', 2),\n    NONE:  parseInt('11111', 2)\n  };\n\n  /** current log level set by setLogLevel, default 'INFO' */\n  static logLevel = 'INFO';\n\n  /** returns if it should call `window.console` or not */\n  static toLog(param): boolean { // returns to log or not\n    const restrictionNum = this.LOG_LEVELS[this.logLevel];\n    const requiredNum = this.LOG_LEVELS[param];\n\n    return requiredNum > restrictionNum;\n  }\n\n  /** sets the current log level */\n  static setLogLevel(logLevel: string): any {\n    logLevel = logLevel.toUpperCase();\n    const logLevels = Object.keys(this.LOG_LEVELS);\n    if (logLevels.indexOf(logLevel) > -1) {\n      if (window && window.sessionStorage) { // for browser env.\n        window.sessionStorage.setItem('konsole.LOG_LEVEL', logLevel);\n      }\n      this.logLevel = logLevel;\n    } else {\n      console.error(`Error, invalid logLevel, it must be one of ${logLevels}`);\n    }\n  }\n\n  /** The same as `console.debug()` if the current log level is greater than `debug` */\n  static debug(...args: Array<any>): void {\n    if (this.toLog('DEBUG')) {\n        // noinspection TsLint\n        console.debug.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.log()` if the current log level is greater than `log` */\n  static log(...args: Array<any>): void {\n    if (this.toLog('LOG')) {\n      console.log.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.info()` if the current log level is greater than `info` */\n  static info(...args: Array<any>): void {\n    if (this.toLog('INFO')) {\n        // noinspection TsLint\n        console.info.apply(console, arguments); // tslint:disable-line\n    }\n  }\n\n  /** The same as `console.warn()` if the current log level is greater than `warn` */\n  static warn(...args: Array<any>): void {\n    if (this.toLog('WARN')) {\n      console.warn.apply(console, arguments);\n    }\n  }\n\n  /** The same as `console.error()` if the current log level is greater than `error` */\n  static error(...args: Array<any>): void {\n    if (this.toLog('ERROR')) {\n      console.error.apply(console, arguments);\n    }\n  }\n}\n\n// konsole.setLogLevel('all');\n// konsole.debug('yes');\n// konsole.log('yes');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('none');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('no');\n\n// konsole.setLogLevel('info');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('yes');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('WARN');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('yes');\n// konsole.error('yes');\n\n// konsole.setLogLevel('ERROR');\n// konsole.debug('no');\n// konsole.log('no');\n// konsole.info('no');\n// konsole.warn('no');\n// konsole.error('yes');\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NguiHighlightPipe} from './src/ngui-highlight.pipe';\nimport {DynamicComponentService} from './src/dynamic-component.service';\nimport { konsole } from './src/konsole';\nimport { fireEvent } from './src/fire-event';\n\nexport {DynamicComponentService, NguiHighlightPipe, konsole, fireEvent};\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NguiHighlightPipe],\n  exports: [NguiHighlightPipe],\n  providers: [DynamicComponentService]\n})\nexport class NguiUtilsModule { }\n","import {NgModule} from '@angular/core';\nimport {NguiInviewModule} from './ngui-inview/ngui-inview.module';\nimport {NguiListModule} from './ngui-list/ngui-list.module';\nimport {NguiUtilsModule} from './ngui-utils/ngui-utils.module';\n\n@NgModule({\n  imports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ],\n  exports: [\n    NguiInviewModule,\n    NguiListModule,\n    NguiUtilsModule\n  ]\n})\nexport class NguiCommonModule {\n}\n"]}